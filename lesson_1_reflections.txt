How did viewing a diff between two versions of a file help you see the bug that
was introduced?

When the files are too long to be compared mannually, then we need to use diff -u.
It was was pretty easy


How could having easy acces to the entire history of a file make you a more efficient programmer in the log run?

I wil be able to see the changes/improvements which I have made. And some times while making the changes if I have done any mistake then it will be easy for me to figure out that mistake.


What do you think are the pros and cons of mannually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Goole Docs does?

The pro:
	the commits will be as per requirement not too much nor less.
the cons:
	somestimes we may forget to commit
	or we may give a bad commit
	

##############Git Errors and Warnings Solution################

Should not be doing an octopus
Octopus is a strategy Git uses to combine many different versions of code together. This message can appear if you try to use this strategy in an inappropriate situation.

You are in 'detached HEAD' state
HEAD is what Git calls the commit you are currently on. You can “detach” the HEAD by switching to a previous commit, which we’ll see in the next video. Despite what it sounds like, it’s actually not a bad thing to detach the HEAD. Git just warns you so that you’ll realize you’re doing it.

Panic! (the 'impossible' happened)
This is a real error message, but it’s not output by Git. Instead it’s output by GHC, the compiler for a programming language called Haskell. It’s reserved for particularly surprising errors!

Takeaway We hope these errors and warnings amused you as much as they amused us! Now that you know what kind of errors Git can throw, you’re ready to start checking out previous versions of files with Caroline.
______________________________________________________________________________________________-

How can you use the commands git log and git diff to view the history of files?

First use git log to see the logs made in the files, then use git diff <first id> <second id> to compare bet them


How might using version control make you more confident to make changes that could break something?

Now I will be more confident than before because I can get back to the previous versions of my file cmd "git checkout"



How do you want to use git?

Its great.


